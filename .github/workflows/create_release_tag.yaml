name: Create Release Tag
on:
  workflow_run:
    workflows:
      - Continuous Integration
    types:
      - completed

jobs:
  create_release_tag:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Commit Message
        id: commit_message
        run: echo "::set-output name=message::$(git log --format=%B -n 1 $GITHUB_SHA)"

      - name: Release Version
        id: version
        run: |
          message=$(git log --format=%B -n 1 ${{ github.sha }})
          tag_name=$(echo "$message" | sed -n 's/.*--tag_name: \([0-9]\+\.[0-9]\+\.[0-9]\+\).*/\1/p')
          release_name=$(echo "$message" | sed -n 's/.*--release_name: \([^|]\+\).*/\1/p')
          body=$(echo "$message" | sed -n '/--body:/,/--/p' | sed '1d;$d' | sed ':a;N;$!ba;s/\n/ /g')
          draft=$(echo "$message" | sed -n 's/.*--draft: true.*/true/p')
          prerelease=$(echo "$message" | sed -n 's/.*--prerelease: true.*/true/p')
          if [ -z "$draft" ]; then
            draft=false
          fi
          if [ -z "$prerelease" ]; then
            prerelease=false
          fi
          if [[ -n $tag_name ]]; then
            if [ -z "$release_name" ]; then
              release_name="Default Release Name"
            fi
            if [ -z "$body" ]; then
              body="Default Body"
            fi
            echo "::set-output name=tag_name::$tag_name"
            echo "::set-output name=release_name::$release_name"
            echo "::set-output name=body::$body"
            echo "::set-output name=draft::$draft"
            echo "::set-output name=prerelease::$prerelease"
          else
            echo "::set-output name=tag_name::"
          fi

      - name: Check if Version is Empty
        if: steps.version.outputs.version == ''
        run: |
          echo "Nothing to release tag"
          exit 0

      - name: Create Release Tag
        id: create_release
        uses: actions/create-release@latest
        if: steps.version.outputs.tag_name != ''
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.tag_name }}
          release_name: ${{ steps.version.outputs.release_name }}
          body: ${{ steps.version.outputs.body }}
          draft: ${{ steps.version.outputs.draft }}
          prerelease: ${{ steps.version.outputs.prerelease }}